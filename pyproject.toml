[tool.poetry]
name = "site-scanner"
version = "1.0.0"
description = "Web scoring and site analysis tool"
authors = ["Developer <developer@example.com>"]
readme = "README.md"
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.116.1"
uvicorn = {extras = ["standard"], version = "^0.35.0"}
celery = "^5.5.3"
redis = "^6.2.0"
validators = "^0.35.0"
tldextract = "^5.3.0"
python-whois = "^0.9.5"
ipwhois = "^1.3.0"
crawlee = "^0.6.11"
playwright = "^1.50.0"
python-dotenv = "^1.0.0"

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.2.0"
ruff = "^0.12.5"
black = "^25.1.0"
pytest = "^8.4.1"
pytest-asyncio = "^0.24.0"
pytest-cov = "^5.0.0"
httpx = "^0.28.1"

[tool.poetry.group.test.dependencies]
pytest = "^8.4.1"
pytest-asyncio = "^0.24.0"
pytest-cov = "^5.0.0"
httpx = "^0.28.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py312"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
